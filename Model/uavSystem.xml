<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N = 3; //Number of tasks
const int S = 3; //Number of Sensors
const int A = 4; //Number of Actuators

typedef int[0,A-3] actid_t; //Actuators Ids
typedef int[0,S-2] senid_t; //Sensors Ids
typedef int[0,N-1] pid_t;   //Process Ids

broadcast chan done[N], run[N], stop, rAct[A], rSen[S];//, request, response;
broadcast chan ready;
clock time;

const int E[pid_t] = {12000, 12000, 100000};
const int L[pid_t] = {12000, 12000, 100000};      // [ E[i] , L[i] ] Ready interval
const int D[pid_t] = {12000, 12000, 100000};		// Deadlines
const int C[pid_t] = { 3000,  1000,  10000};    	// Computation Times
const int P[pid_t] = {    3,     2,      1};		// Priorities

// Task queue
pid_t queue[pid_t];
int[0,N] len = N;

const int TLen[pid_t] = {6,4,3};
const int CTF[pid_t][7] = {{125, 250, 500, 500, 750, 750, 125}, {125, 250, 125, 375, 125, 0, 0}, {125, 9250, 500, 125, 0, 0, 0}};

const int CTS[S] = {250, 125, 9250};
const int CTA[A] = {500, 500, 750, 750};

//Lists of devices IDs and their types
const int DReqType[pid_t][7] = {{-1, 1, 1, 1, 1, -1, -1}, { 0, 0, -1, -1, -1, -1, -1}, { 0, -1, -1, -1, -1, -1, -1}}; // 0 - Sensor 1 - Actuator
const int DReqId[pid_t][7]   = {{-1, 0, 1, 2, 3, -1, -1}, { 0, 1, -1, -1, -1, -1, -1}, { 2, -1, -1, -1, -1, -1, -1}};

const int DProType[pid_t][7] = {{-1, -1, 1, 1, 1,  1, -1}, {-1, 0,  0, -1, -1, -1, -1}, {-1,  0, -1, -1, -1, -1, -1}}; // 0 - Sensor 1 - Actuator
const int DProId[pid_t][7]   = {{-1, -1, 0, 1, 2,  3, -1}, {-1, 0,  1, -1, -1, -1, -1}, {-1,  2, -1, -1, -1, -1, -1}};

int sProcessed[S] = {0, 0, 0};
int aProcessed[A] = {0, 0, 0, 0};

int size[pid_t] = {6,5,4};
int cf[pid_t] = {0,0,0};

int error = 0;

pid_t head()     { return queue[0]; }     //Get the top of the queue element
bool isEmpty()   { return len == 0; }     //Analyse if the queue is empty

bool processed() {
    if(DProType[head()][cf[head()]] &gt; -1){
        if(DProType[head()][cf[head()]] == 0)
            return sProcessed[DProId[head()][cf[head()]]] == 1;
        else
            return aProcessed[DProId[head()][cf[head()]]] == 1;
    }else
        return 0;
}

void initialize()
{
  // Bubble-sort tasks into the queue.
  bool picked[pid_t];
  for(i : pid_t)
  {
    int max = -1, t = -1;
    for(j : pid_t)
    {
      if (!picked[j] &amp;&amp; P[j] &gt; max)
      {
        max = P[j];
        t = j;
      }
    }
    picked[t] = true;
    queue[i] = t;
  }
}

void add(pid_t id){ //Add a new schedueled task to the ordered queue
    pid_t i, temp;
    queue[len] = id;
    for(i = len; i &gt; 0 &amp;&amp; P[queue[i]] &gt; P[queue[i-1]]; i--){
        temp = queue[i];
        queue[i] = queue[i-1];
        queue[i-1] = temp;
    }
    len++;
}

void remove(){ //remove the queue head
    int i;
    for(i = 0; i+1 &lt; N; ++i) { queue[i] = queue[i+1]; }
    queue[--len] = 0;    
}

bool isError() {return error; }</declaration>
	<template>
		<name x="5" y="5">Scheduler</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-272" y="-17">
			<name x="-263" y="-25">NewRequest</name>
		</location>
		<location id="id1" x="-170" y="34">
			<name x="-161" y="8">Run</name>
		</location>
		<location id="id2" x="-170" y="-68">
			<name x="-161" y="-93">Select</name>
			<committed/>
		</location>
		<location id="id3" x="-170" y="-170">
			<name x="-161" y="-195">NewTasks</name>
		</location>
		<location id="id4" x="-170" y="-272">
			<name x="-212" y="-297">Free</name>
			<committed/>
		</location>
		<location id="id5" x="-170" y="-374">
			<name x="-180" y="-408">Init</name>
			<committed/>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-161" y="-127">done[head()]?</label>
			<nail x="-51" y="34"/>
			<nail x="-51" y="-272"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-263" y="-161">!isEmpty()</label>
			<nail x="-272" y="-272"/>
			<nail x="-272" y="-68"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-263" y="-42">!isError()</label>
			<label kind="synchronisation" x="-255" y="-59">stop!</label>
			<nail x="-272" y="-68"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-254" y="0">!isError()</label>
			<label kind="synchronisation" x="-254" y="17">ready?</label>
			<nail x="-272" y="34"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-161" y="-51">!isError()</label>
			<label kind="synchronisation" x="-161" y="-34">run[head()]!</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-229" y="-127">ready?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-246" y="-229">isEmpty()</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="assignment" x="-161" y="-331">initialize()</label>
		</transition>
	</template>
	<template>
		<name>T_behaviorEst</name>
		<declaration>const int id = 1;
clock ax, t;

void updateCf(){
   if(cf[id] &lt; TLen[id])
      cf[id]++;
}</declaration>
		<location id="id6" x="204" y="136">
			<name x="221" y="119">BehaviorEst</name>
			<label kind="invariant" x="212" y="144">ax &lt; D[id]</label>
		</location>
		<location id="id7" x="0" y="136">
			<name x="-51" y="153">SonarInterface</name>
			<label kind="invariant" x="-25" y="170">ax &lt; D[id]</label>
		</location>
		<location id="id8" x="0" y="272">
			<name x="8" y="246">Error</name>
		</location>
		<location id="id9" x="204" y="-136">
			<name x="212" y="-170">MsgSend</name>
			<label kind="exponentialrate" x="194" y="-102">1</label>
		</location>
		<location id="id10" x="-204" y="136">
			<name x="-314" y="119">ImuInterface</name>
			<label kind="invariant" x="-280" y="153">ax &lt; D[id]</label>
		</location>
		<location id="id11" x="-204" y="-136">
			<name x="-255" y="-170">MsgReceive</name>
			<label kind="invariant" x="-238" y="-119">ax &lt; D[id]</label>
		</location>
		<location id="id12" x="0" y="0">
			<name x="-25" y="17">Blocked</name>
			<label kind="invariant" x="-25" y="34">ax'==0</label>
		</location>
		<location id="id13" x="0" y="-187">
			<name x="17" y="-195">Ready</name>
			<label kind="exponentialrate" x="8" y="-170">1</label>
		</location>
		<location id="id14" x="0" y="-255">
			<name x="-10" y="-289">Idle</name>
			<label kind="invariant" x="-76" y="-263">t&lt;=L[id]</label>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-187" y="-153">run[id]?</label>
			<label kind="assignment" x="-119" y="-153">ax=0, cf[id] = 0</label>
			<nail x="0" y="-136"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id8"/>
			<label kind="guard" x="59" y="-17">t &gt; D[id] || isError()</label>
			<nail x="340" y="0"/>
			<nail x="340" y="289"/>
			<nail x="34" y="289"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id8"/>
			<label kind="guard" x="-382" y="-204">t &gt; D[id] || isError()</label>
			<nail x="-408" y="-187"/>
			<nail x="-408" y="306"/>
			<nail x="-34" y="306"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-382" y="-153">t &gt; D[id] || isError()</label>
			<nail x="-391" y="-136"/>
			<nail x="-391" y="289"/>
			<nail x="-34" y="289"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="guard" x="-187" y="246">t &gt; D[id] || isError()</label>
			<nail x="-204" y="272"/>
			<nail x="-34" y="272"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="229" y="-153">t &gt; D[id] || isError()</label>
			<nail x="357" y="-136"/>
			<nail x="357" y="306"/>
			<nail x="34" y="306"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="guard" x="59" y="255">t &gt; D[id] || isError()</label>
			<nail x="204" y="272"/>
			<nail x="34" y="272"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="8" y="204">t &gt; D[id] || isError()</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="17" y="-110">cf[id] == 4</label>
			<label kind="synchronisation" x="25" y="-93">run[id]?</label>
			<nail x="17" y="-34"/>
			<nail x="161" y="-136"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="guard" x="119" y="-76">!isError()</label>
			<label kind="synchronisation" x="102" y="-59">stop?</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id6"/>
			<label kind="guard" x="85" y="110">cf[id] == 3</label>
			<label kind="synchronisation" x="85" y="93">run[id]?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id12"/>
			<label kind="guard" x="85" y="17">!isError()</label>
			<label kind="synchronisation" x="119" y="42">stop?</label>
			<nail x="187" y="102"/>
			<nail x="51" y="17"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="-127" y="85">!isError()</label>
			<label kind="synchronisation" x="-93" y="68">stop?</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-153" y="8">cf[id] == 1</label>
			<label kind="synchronisation" x="-153" y="25">run[id]?</label>
			<nail x="-34" y="0"/>
			<nail x="-170" y="93"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-102" y="-110">cf[id] == 0</label>
			<label kind="synchronisation" x="-76" y="-93">run[id]?</label>
			<nail x="-17" y="-34"/>
			<nail x="-144" y="-119"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-153" y="-59">!isError()</label>
			<label kind="synchronisation" x="-153" y="-76">stop?</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id7"/>
			<label kind="guard" x="25" y="76">cf[id] == 2</label>
			<label kind="synchronisation" x="25" y="59">run[id]?</label>
			<nail x="17" y="42"/>
			<nail x="17" y="102"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id12"/>
			<label kind="guard" x="-85" y="102">!isError()</label>
			<label kind="synchronisation" x="-59" y="85">stop?</label>
			<nail x="-17" y="102"/>
			<nail x="-17" y="34"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id14"/>
			<label kind="guard" x="212" y="-246">ax&gt;=CTF[id][cf[id]]
&amp;&amp; !isError()</label>
			<label kind="synchronisation" x="212" y="-204">done[id]!</label>
			<label kind="assignment" x="212" y="-187">remove()</label>
			<nail x="204" y="-255"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id9"/>
			<label kind="guard" x="212" y="-93">!isError() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="212" y="-51">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="42" y="144">processed() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="42" y="178">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="guard" x="-178" y="144">processed() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="-187" y="178">rSen[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="-161" y="195">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-357" y="-93">!isError() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="-382" y="-42">rSen[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="-340" y="-8">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="8" y="-246">t&gt;=E[id]</label>
			<label kind="synchronisation" x="8" y="-229">ready!</label>
			<label kind="assignment" x="8" y="-212">t=0, add(id)</label>
		</transition>
	</template>
	<template>
		<name>T_positionEst</name>
		<declaration>const int id = 2;
clock ax, t;

void updateCf(){
   if(cf[id] &lt; TLen[id])
      cf[id]++;
}</declaration>
		<location id="id15" x="0" y="-34">
			<name x="-25" y="-17">Blocked</name>
			<label kind="invariant" x="-25" y="0">ax'==0</label>
		</location>
		<location id="id16" x="0" y="204">
			<name x="-17" y="170">Error</name>
		</location>
		<location id="id17" x="0" y="-187">
			<name x="17" y="-195">Ready</name>
			<label kind="exponentialrate" x="8" y="-178">1</label>
		</location>
		<location id="id18" x="-136" y="-136">
			<name x="-204" y="-170">MsgReceive</name>
			<label kind="invariant" x="-170" y="-119">ax &lt; D[id]</label>
		</location>
		<location id="id19" x="-136" y="102">
			<name x="-246" y="93">GpsInterface</name>
			<label kind="invariant" x="-170" y="119">ax &lt; D[id]</label>
		</location>
		<location id="id20" x="136" y="-136">
			<name x="144" y="-170">MsgSend</name>
			<label kind="exponentialrate" x="144" y="-127">1</label>
		</location>
		<location id="id21" x="136" y="102">
			<name x="153" y="93">PositionEst</name>
			<label kind="invariant" x="102" y="119">ax &lt; D[id]</label>
		</location>
		<location id="id22" x="0" y="-272">
			<name x="-10" y="-306">Idle</name>
			<label kind="invariant" x="-76" y="-280">t&lt;=L[id]</label>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-118" y="-153">run[id]?</label>
			<label kind="assignment" x="-51" y="-153">ax=0, cf[id] = 0</label>
			<nail x="0" y="-136"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="guard" x="144" y="-42">!isError() &amp;&amp; 
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="144" y="8">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="0" y="68">t &gt; D[id] || 
isError()</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="guard" x="-297" y="-204">t &gt; D[id] || isError()</label>
			<nail x="-323" y="-187"/>
			<nail x="-323" y="238"/>
			<nail x="0" y="238"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id16"/>
			<label kind="guard" x="-297" y="-153">t &gt; D[id] || isError()</label>
			<nail x="-306" y="-136"/>
			<nail x="-306" y="221"/>
			<nail x="-34" y="221"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="guard" x="-153" y="187">t &gt; D[id] || isError()</label>
			<nail x="-136" y="204"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id16"/>
			<label kind="guard" x="153" y="-153">t &gt; D[id] || isError()</label>
			<nail x="306" y="-136"/>
			<nail x="306" y="221"/>
			<nail x="34" y="221"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id16"/>
			<label kind="guard" x="25" y="187">t &gt; D[id] || isError()</label>
			<nail x="136" y="204"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id20"/>
			<label kind="guard" x="0" y="-127">cf[id]==3</label>
			<label kind="synchronisation" x="8" y="-110">run[id]?</label>
			<nail x="17" y="-76"/>
			<nail x="102" y="-136"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id15"/>
			<label kind="guard" x="51" y="-68">!isError()</label>
			<label kind="synchronisation" x="76" y="-93">stop?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id15"/>
			<label kind="guard" x="-85" y="51">!isError()</label>
			<label kind="synchronisation" x="-59" y="34">stop?</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<label kind="guard" x="-119" y="-25">cf[id]==1</label>
			<label kind="synchronisation" x="-127" y="-8">run[id]?</label>
			<nail x="-34" y="-34"/>
			<nail x="-119" y="51"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id18"/>
			<label kind="guard" x="-85" y="-127">cf[id]==0</label>
			<label kind="synchronisation" x="-59" y="-110">run[id]?</label>
			<nail x="-17" y="-76"/>
			<nail x="-93" y="-127"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id15"/>
			<label kind="guard" x="-136" y="-85">!isError()</label>
			<label kind="synchronisation" x="-85" y="-68">stop?</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id21"/>
			<label kind="guard" x="59" y="-25">cf[id]==2</label>
			<label kind="synchronisation" x="76" y="-8">run[id]?</label>
			<nail x="34" y="-34"/>
			<nail x="119" y="51"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id15"/>
			<label kind="guard" x="17" y="42">!isError()</label>
			<label kind="synchronisation" x="17" y="25">stop?</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="guard" x="144" y="-255">ax&gt;=CTF[id][cf[id]]
&amp;&amp; !isError()</label>
			<label kind="synchronisation" x="144" y="-212">done[id]!</label>
			<label kind="assignment" x="144" y="-195">remove()</label>
			<nail x="136" y="-272"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="guard" x="-102" y="110">processed() &amp;&amp; !isError() &amp;&amp; 
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="-68" y="153">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="-289" y="-68">!isError() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="-314" y="-25">rSen[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="-263" y="8">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id17"/>
			<label kind="guard" x="8" y="-255">t&gt;=E[id]</label>
			<label kind="synchronisation" x="8" y="-238">ready!</label>
			<label kind="assignment" x="8" y="-221">t=0, add(id)</label>
		</transition>
	</template>
	<template>
		<name>T_actuation</name>
		<declaration>const int id = 0;
clock ax, t;

void updateCf(){
   if(cf[id] &lt; TLen[id])
      cf[id]++;
}</declaration>
		<location id="id23" x="204" y="0">
			<name x="212" y="-34">ServoLInterface</name>
			<label kind="invariant" x="221" y="8">ax&lt;D[id]</label>
		</location>
		<location id="id24" x="204" y="170">
			<name x="68" y="153">ServoRInterface</name>
			<label kind="invariant" x="221" y="170">ax&lt;D[id]</label>
		</location>
		<location id="id25" x="0" y="170">
			<name x="-42" y="136">ESCLInterface</name>
			<label kind="invariant" x="-34" y="187">ax&lt;D[id]</label>
		</location>
		<location id="id26" x="0" y="0">
			<name x="-25" y="17">Blocked</name>
			<label kind="invariant" x="-25" y="34">ax'==0</label>
		</location>
		<location id="id27" x="0" y="306">
			<name x="8" y="280">Error</name>
		</location>
		<location id="id28" x="0" y="-212">
			<name x="17" y="-220">Ready</name>
		</location>
		<location id="id29" x="-204" y="-170">
			<name x="-246" y="-204">MsgReceive</name>
			<label kind="invariant" x="-238" y="-153">ax &lt; D[id]</label>
		</location>
		<location id="id30" x="-204" y="0">
			<name x="-238" y="-42">SignalTrans</name>
			<label kind="invariant" x="-238" y="17">ax &lt; D[id]</label>
		</location>
		<location id="id31" x="204" y="-170">
			<name x="127" y="-195">MsgSend</name>
			<label kind="exponentialrate" x="194" y="-136">1</label>
		</location>
		<location id="id32" x="-204" y="170">
			<name x="-178" y="153">EscRInterface</name>
			<label kind="invariant" x="-297" y="170">ax &lt; D[id]</label>
		</location>
		<location id="id33" x="0" y="-280">
			<name x="-10" y="-314">Idle</name>
			<label kind="invariant" x="-85" y="-288">t&lt;=L[id]</label>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id23"/>
			<target ref="id27"/>
			<label kind="guard" x="221" y="-17">t &gt; D[id] || isError()</label>
			<nail x="357" y="0"/>
			<nail x="357" y="340"/>
			<nail x="34" y="340"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id27"/>
			<label kind="guard" x="59" y="289">t &gt; D[id] || isError()</label>
			<nail x="204" y="306"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id23"/>
			<label kind="guard" x="76" y="-34">cf[id]==5</label>
			<label kind="synchronisation" x="85" y="-51">run[id]?</label>
			<nail x="42" y="-17"/>
			<nail x="170" y="-17"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id26"/>
			<label kind="guard" x="76" y="0">!isError()</label>
			<label kind="synchronisation" x="93" y="17">stop?</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id24"/>
			<label kind="guard" x="8" y="59">cf[id]==4</label>
			<label kind="synchronisation" x="35" y="76">run[id]?</label>
			<nail x="17" y="34"/>
			<nail x="153" y="153"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id26"/>
			<label kind="guard" x="102" y="68">!isError()</label>
			<label kind="synchronisation" x="127" y="85">stop?</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="guard" x="17" y="178">processed() &amp;&amp; !isError() 
&amp;&amp; ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="25" y="221">rAct[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="42" y="246">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id31"/>
			<label kind="guard" x="212" y="-136">processed() &amp;&amp;
!isError() &amp;&amp; 
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="212" y="-76">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id23"/>
			<label kind="guard" x="212" y="34">processed() &amp;&amp;
!isError() &amp;&amp; 
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="187" y="93">rAct[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="204" y="119">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id27"/>
			<label kind="guard" x="8" y="263">t &gt; D[id] || isError()</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="guard" x="-85" y="102">cf[id]==3</label>
			<label kind="synchronisation" x="-76" y="119">run[id]?</label>
			<nail x="-17" y="34"/>
			<nail x="-17" y="136"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="guard" x="0" y="93">!isError()</label>
			<label kind="synchronisation" x="8" y="110">stop?</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id25"/>
			<label kind="guard" x="-187" y="178">processed() &amp;&amp; !isError() 
&amp;&amp; ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="-178" y="221">rAct[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="-153" y="246">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-187" y="-187">run[id]?</label>
			<label kind="assignment" x="-119" y="-187">ax=0, cf[id] = 0</label>
			<nail x="0" y="-170"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="guard" x="59" y="314">t &gt; D[id] || isError()</label>
			<nail x="51" y="17"/>
			<nail x="187" y="17"/>
			<nail x="187" y="136"/>
			<nail x="238" y="170"/>
			<nail x="238" y="331"/>
			<nail x="51" y="331"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="guard" x="-357" y="-238">t &gt; D[id] || isError()</label>
			<nail x="-391" y="-212"/>
			<nail x="-391" y="357"/>
			<nail x="0" y="357"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id27"/>
			<label kind="guard" x="-357" y="-187">t &gt; D[id] || isError()</label>
			<nail x="-382" y="-170"/>
			<nail x="-382" y="340"/>
			<nail x="-34" y="340"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id27"/>
			<label kind="guard" x="-357" y="-25">t &gt; D[id] || isError()</label>
			<nail x="-374" y="0"/>
			<nail x="-374" y="323"/>
			<nail x="-34" y="323"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id27"/>
			<label kind="guard" x="221" y="-187">t &gt; D[id] || isError()</label>
			<nail x="365" y="-170"/>
			<nail x="365" y="357"/>
			<nail x="34" y="357"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id27"/>
			<label kind="guard" x="-204" y="297">t &gt; D[id] || isError()</label>
			<nail x="-204" y="289"/>
			<nail x="-34" y="289"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id31"/>
			<label kind="guard" x="42" y="-136">cf[id]==6</label>
			<label kind="synchronisation" x="34" y="-119">run[id]?</label>
			<nail x="17" y="-42"/>
			<nail x="170" y="-170"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id26"/>
			<label kind="guard" x="119" y="-102">!isError()</label>
			<label kind="synchronisation" x="110" y="-85">stop?</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id26"/>
			<label kind="guard" x="-170" y="8">!isError()</label>
			<label kind="synchronisation" x="-153" y="25">stop?</label>
			<nail x="-34" y="0"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id30"/>
			<label kind="guard" x="-144" y="-51">cf[id]==1</label>
			<label kind="synchronisation" x="-136" y="-34">run[id]?</label>
			<nail x="-42" y="-17"/>
			<nail x="-170" y="-17"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id29"/>
			<label kind="guard" x="-102" y="-127">cf[id]==0</label>
			<label kind="synchronisation" x="-85" y="-110">run[id]?</label>
			<nail x="-17" y="-34"/>
			<nail x="-153" y="-153"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id26"/>
			<label kind="guard" x="-195" y="-102">!isError()</label>
			<label kind="synchronisation" x="-144" y="-85">stop?</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id32"/>
			<label kind="guard" x="-195" y="51">cf[id]==2</label>
			<label kind="synchronisation" x="-187" y="76">run[id]?</label>
			<nail x="-51" y="17"/>
			<nail x="-187" y="136"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id26"/>
			<label kind="guard" x="-102" y="76">!isError()</label>
			<label kind="synchronisation" x="-127" y="93">stop?</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id33"/>
			<label kind="guard" x="212" y="-280">ax &gt;= CTF[id][cf[id]]
&amp;&amp; !isError()</label>
			<label kind="synchronisation" x="212" y="-238">done[id]!</label>
			<label kind="assignment" x="212" y="-221">remove()</label>
			<nail x="204" y="-280"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id32"/>
			<label kind="guard" x="-357" y="34">!isError() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="synchronisation" x="-374" y="76">rAct[DReqId[id][cf[id]]]!</label>
			<label kind="assignment" x="-340" y="102">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="-357" y="-119">!isError() &amp;&amp;
ax &gt;= CTF[id][cf[id]]</label>
			<label kind="assignment" x="-340" y="-76">updateCf(), ax=0</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id28"/>
			<label kind="guard" x="8" y="-272">t&gt;=E[id]</label>
			<label kind="synchronisation" x="8" y="-255">ready!</label>
			<label kind="assignment" x="8" y="-238">t=0, add(id)</label>
		</transition>
	</template>
	<template>
		<name>Sensor</name>
		<parameter>const senid_t id</parameter>
		<location id="id34" x="102" y="-102">
			<name x="51" y="-85">PartialOperation</name>
		</location>
		<location id="id35" x="102" y="85">
			<name x="42" y="102">IrreversibleFailure</name>
		</location>
		<location id="id36" x="102" y="0">
			<name x="43" y="25">EmergencyMode</name>
		</location>
		<location id="id37" x="-102" y="0">
			<name x="-77" y="-9">Processing</name>
			<label kind="exponentialrate" x="-112" y="34">(id + 1) : S*S</label>
		</location>
		<location id="id38" x="-204" y="0">
			<name x="-221" y="-34">Idle</name>
		</location>
		<branchpoint id="id39" x="-51" y="-34">
		</branchpoint>
		<branchpoint id="id40" x="-51" y="34">
		</branchpoint>
		<init ref="id38"/>
		<transition>
			<source ref="id39"/>
			<target ref="id35"/>
			<label kind="assignment" x="-42" y="-153">error:=1</label>
			<label kind="comments" x="-42" y="-187">Logical Failure</label>
			<label kind="probability" x="68" y="-153">2</label>
			<nail x="-51" y="-161"/>
			<nail x="170" y="-161"/>
			<nail x="170" y="85"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id34"/>
			<label kind="assignment" x="-42" y="144">error:=1</label>
			<label kind="comments" x="-42" y="119">Electrical Failure</label>
			<label kind="probability" x="68" y="144">1</label>
			<nail x="-51" y="136"/>
			<nail x="136" y="136"/>
			<nail x="136" y="-102"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id36"/>
			<label kind="assignment" x="-34" y="-34">error:=1</label>
			<label kind="comments" x="-42" y="-59">Logical Failure</label>
			<label kind="probability" x="68" y="-34">2</label>
			<nail x="102" y="-34"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id36"/>
			<label kind="assignment" x="-42" y="34">error:=1</label>
			<label kind="comments" x="-42" y="8">Electrical Failure</label>
			<label kind="probability" x="68" y="34">1</label>
			<nail x="102" y="34"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id34"/>
			<label kind="assignment" x="-42" y="-102">error:=1</label>
			<label kind="comments" x="-42" y="-127">Logical Failure</label>
			<label kind="probability" x="68" y="-102">2</label>
			<nail x="-51" y="-102"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id35"/>
			<label kind="assignment" x="-42" y="93">error:=1</label>
			<label kind="comments" x="-42" y="59">Electrical Failure</label>
			<label kind="probability" x="68" y="93">1</label>
			<nail x="-51" y="85"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id39"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id40"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="assignment" x="-204" y="-59">sProcessed[id]:=1</label>
			<nail x="-119" y="-34"/>
			<nail x="-170" y="-34"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-187" y="42">rSen[id]?</label>
			<label kind="assignment" x="-221" y="59">sProcessed[id]:=0</label>
			<nail x="-170" y="34"/>
			<nail x="-119" y="34"/>
		</transition>
	</template>
	<template>
		<name>D_gps</name>
		<declaration>const int id = 2;
</declaration>
		<location id="id41" x="331" y="-68">
			<name x="280" y="-51">PartialOperation</name>
		</location>
		<location id="id42" x="331" y="136">
			<name x="263" y="153">IrreversibleFailure</name>
		</location>
		<location id="id43" x="331" y="34">
			<name x="271" y="51">EmergencyMode</name>
		</location>
		<location id="id44" x="170" y="34">
			<name x="187" y="25">Processing</name>
		</location>
		<location id="id45" x="68" y="34">
			<name x="51" y="0">Idle</name>
		</location>
		<branchpoint id="id46" x="221" y="0">
		</branchpoint>
		<branchpoint id="id47" x="221" y="68">
		</branchpoint>
		<init ref="id45"/>
		<transition>
			<source ref="id46"/>
			<target ref="id42"/>
			<label kind="assignment" x="348" y="136">error:=1</label>
			<label kind="comments" x="357" y="93">Communication
Loss</label>
			<label kind="probability" x="416" y="136">2</label>
			<nail x="408" y="0"/>
			<nail x="408" y="136"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id43"/>
			<label kind="assignment" x="229" y="93">error:=1</label>
			<label kind="comments" x="238" y="76">Power Loss</label>
			<label kind="probability" x="306" y="93">2</label>
			<nail x="331" y="68"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id41"/>
			<label kind="assignment" x="229" y="-68">error:=1</label>
			<label kind="comments" x="229" y="-93">Data Loss</label>
			<label kind="probability" x="297" y="-68">3</label>
			<nail x="221" y="-68"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id41"/>
			<label kind="assignment" x="229" y="0">error:=1</label>
			<label kind="comments" x="229" y="-25">Incorrect Data</label>
			<label kind="probability" x="297" y="0">3</label>
			<nail x="331" y="0"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id41"/>
			<label kind="assignment" x="229" y="-136">error:=1</label>
			<label kind="comments" x="221" y="-161">Delayed Data</label>
			<label kind="probability" x="297" y="-136">3</label>
			<nail x="221" y="-136"/>
			<nail x="331" y="-136"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id42"/>
			<label kind="assignment" x="229" y="136">error:=1</label>
			<label kind="comments" x="229" y="119">ShortCircuit</label>
			<label kind="probability" x="306" y="136">1</label>
			<nail x="221" y="136"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id46"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id47"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="assignment" x="25" y="-25">sProcessed[id]:=1</label>
			<nail x="136" y="0"/>
			<nail x="102" y="0"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="85" y="110">rSen[id]?</label>
			<label kind="assignment" x="25" y="85">sProcessed[id]:=0</label>
			<nail x="102" y="68"/>
			<nail x="136" y="68"/>
		</transition>
	</template>
	<template>
		<name>Actuator</name>
		<parameter>const actid_t id</parameter>
		<location id="id48" x="68" y="-136">
			<name x="85" y="-161">IrreversibleFailure</name>
		</location>
		<location id="id49" x="68" y="68">
			<name x="85" y="51">PartialOperation</name>
		</location>
		<location id="id50" x="68" y="-34">
			<name x="85" y="-51">EmergencyMode</name>
		</location>
		<location id="id51" x="-68" y="-34">
			<name x="-144" y="-42">Actuate</name>
			<label kind="exponentialrate" x="-85" y="-17">(id + 1) : A*A</label>
		</location>
		<location id="id52" x="-170" y="-34">
			<name x="-221" y="-42">Idle</name>
		</location>
		<branchpoint id="id53" x="-17" y="-34">
		</branchpoint>
		<branchpoint id="id54" x="-17" y="-102">
		</branchpoint>
		<branchpoint id="id55" x="-17" y="34">
		</branchpoint>
		<init ref="id52"/>
		<transition>
			<source ref="id51"/>
			<target ref="id52"/>
			<label kind="assignment" x="-212" y="-93">aProcessed[id]:=1</label>
			<nail x="-102" y="-68"/>
			<nail x="-136" y="-68"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id54"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id49"/>
			<label kind="assignment" x="-51" y="68">error:=1</label>
			<label kind="comments" x="-59" y="42">Logical Failure</label>
			<label kind="probability" x="25" y="68">3</label>
			<nail x="-51" y="-76"/>
			<nail x="-42" y="68"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id50"/>
			<label kind="assignment" x="0" y="-102">error:=1</label>
			<label kind="comments" x="-8" y="-119">Logical Failure</label>
			<label kind="probability" x="76" y="-102">3</label>
			<nail x="68" y="-102"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id48"/>
			<label kind="assignment" x="-42" y="-136">error:=1</label>
			<label kind="comments" x="-76" y="-161">Electrical Failure</label>
			<label kind="probability" x="34" y="-136">2</label>
			<nail x="-51" y="-102"/>
			<nail x="-51" y="-136"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id50"/>
			<label kind="assignment" x="-25" y="-34">error:=1</label>
			<label kind="comments" x="-17" y="-76">Electrical
Failure</label>
			<label kind="probability" x="42" y="-34">2</label>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id48"/>
			<label kind="assignment" x="-8" y="119">error:=1</label>
			<label kind="comments" x="-8" y="93">Mechanical Failure</label>
			<label kind="probability" x="68" y="119">1</label>
			<nail x="-17" y="119"/>
			<nail x="170" y="119"/>
			<nail x="170" y="-136"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id49"/>
			<label kind="assignment" x="-8" y="17">error:=1</label>
			<label kind="comments" x="-8" y="0">Mechanical Failure</label>
			<label kind="probability" x="68" y="17">1</label>
			<nail x="68" y="34"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id53"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id55"/>
		</transition>
		<transition>
			<source ref="id52"/>
			<target ref="id51"/>
			<label kind="synchronisation" x="-144" y="8">rAct[id]?</label>
			<label kind="assignment" x="-212" y="25">aProcessed[id]:=0</label>
			<nail x="-136" y="0"/>
			<nail x="-93" y="0"/>
		</transition>
	</template>
	<template>
		<name>D_servoR</name>
		<declaration>const int id = 2;</declaration>
		<location id="id56" x="119" y="-136">
			<name x="127" y="-170">IrreversibleFailure</name>
		</location>
		<location id="id57" x="119" y="68">
			<name x="144" y="76">PartialOperation</name>
		</location>
		<location id="id58" x="119" y="-34">
			<name x="93" y="-17">EmergencyMode</name>
		</location>
		<location id="id59" x="-34" y="-34">
			<name x="-110" y="-43">Actuate</name>
			<label kind="exponentialrate" x="-44" y="0">1</label>
		</location>
		<location id="id60" x="-136" y="-34">
			<name x="-178" y="-42">Idle</name>
		</location>
		<branchpoint id="id61" x="34" y="-34">
		</branchpoint>
		<branchpoint id="id62" x="34" y="-102">
		</branchpoint>
		<branchpoint id="id63" x="34" y="34">
		</branchpoint>
		<init ref="id60"/>
		<transition>
			<source ref="id59"/>
			<target ref="id62"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id60"/>
			<label kind="assignment" x="-178" y="-93">aProcessed[id]:=1</label>
			<nail x="-68" y="-68"/>
			<nail x="-102" y="-68"/>
		</transition>
		<transition>
			<source ref="id62"/>
			<target ref="id57"/>
			<label kind="assignment" x="127" y="42">error:=1</label>
			<label kind="comments" x="136" y="-127">Data Loss</label>
			<label kind="probability" x="204" y="42">3</label>
			<nail x="221" y="-102"/>
			<nail x="221" y="68"/>
		</transition>
		<transition>
			<source ref="id62"/>
			<target ref="id58"/>
			<label kind="assignment" x="42" y="-59">error:=1</label>
			<label kind="comments" x="42" y="-93">Communication
loss</label>
			<label kind="probability" x="136" y="-59">2</label>
			<nail x="119" y="-102"/>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id58"/>
			<label kind="assignment" x="51" y="17">error:=1</label>
			<label kind="comments" x="51" y="-25">Power
Loss</label>
			<label kind="probability" x="119" y="17">2</label>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id56"/>
			<label kind="assignment" x="0" y="-136">error:=1</label>
			<label kind="comments" x="0" y="-161">Short circuit</label>
			<label kind="probability" x="85" y="-136">1</label>
			<nail x="-17" y="-136"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id61"/>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id56"/>
			<label kind="assignment" x="42" y="127">error:=1</label>
			<label kind="comments" x="42" y="102">Total Failure</label>
			<label kind="probability" x="119" y="127">1</label>
			<nail x="34" y="119"/>
			<nail x="238" y="119"/>
			<nail x="238" y="-136"/>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id57"/>
			<label kind="assignment" x="42" y="76">error:=1</label>
			<label kind="comments" x="42" y="34">Partial
failure</label>
			<label kind="probability" x="119" y="85">2</label>
			<nail x="34" y="68"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id63"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id59"/>
			<label kind="synchronisation" x="-127" y="8">rAct[id]?</label>
			<label kind="assignment" x="-178" y="25">aProcessed[id]:=0</label>
			<nail x="-102" y="0"/>
			<nail x="-68" y="0"/>
		</transition>
	</template>
	<template>
		<name>D_servoL</name>
		<declaration>const int id = 3;</declaration>
		<location id="id64" x="119" y="68">
			<name x="119" y="34">PartialOperation</name>
		</location>
		<location id="id65" x="119" y="-34">
			<name x="119" y="-17">EmergencyMode</name>
		</location>
		<location id="id66" x="119" y="-136">
			<name x="127" y="-170">IrreversibleFailure</name>
		</location>
		<location id="id67" x="-34" y="-34">
			<name x="-110" y="-43">Actuate</name>
			<label kind="exponentialrate" x="-34" y="-17">1</label>
		</location>
		<location id="id68" x="-136" y="-34">
			<name x="-178" y="-42">Idle</name>
		</location>
		<branchpoint id="id69" x="34" y="-102">
		</branchpoint>
		<branchpoint id="id70" x="34" y="-34">
		</branchpoint>
		<branchpoint id="id71" x="34" y="34">
		</branchpoint>
		<init ref="id68"/>
		<transition>
			<source ref="id67"/>
			<target ref="id69"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id68"/>
			<label kind="assignment" x="-161" y="-93">aProcessed[id]:=1</label>
			<nail x="-68" y="-68"/>
			<nail x="-102" y="-68"/>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id64"/>
			<label kind="assignment" x="144" y="51">error:=1</label>
			<label kind="comments" x="153" y="-127">Data Loss</label>
			<label kind="probability" x="221" y="51">3</label>
			<nail x="246" y="-102"/>
			<nail x="246" y="68"/>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id65"/>
			<label kind="assignment" x="42" y="-119">error:=1</label>
			<label kind="comments" x="42" y="-93">Communication
loss</label>
			<label kind="probability" x="110" y="-119">2</label>
			<nail x="119" y="-102"/>
		</transition>
		<transition>
			<source ref="id70"/>
			<target ref="id65"/>
			<label kind="assignment" x="42" y="-51">error:=1</label>
			<label kind="comments" x="42" y="-25">Power
Loss</label>
			<label kind="probability" x="102" y="-25">2</label>
		</transition>
		<transition>
			<source ref="id70"/>
			<target ref="id66"/>
			<label kind="assignment" x="0" y="-136">error:=1</label>
			<label kind="comments" x="0" y="-161">Short circuit</label>
			<label kind="probability" x="76" y="-136">1</label>
			<nail x="-17" y="-136"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id70"/>
		</transition>
		<transition>
			<source ref="id71"/>
			<target ref="id66"/>
			<label kind="assignment" x="42" y="102">error:=1</label>
			<label kind="comments" x="136" y="85">Total Failure</label>
			<label kind="probability" x="119" y="102">1</label>
			<nail x="34" y="102"/>
			<nail x="255" y="102"/>
			<nail x="255" y="-136"/>
		</transition>
		<transition>
			<source ref="id71"/>
			<target ref="id64"/>
			<label kind="assignment" x="42" y="68">error:=1</label>
			<label kind="comments" x="42" y="25">Partial
failure</label>
			<label kind="probability" x="102" y="34">2</label>
			<nail x="34" y="68"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id71"/>
		</transition>
		<transition>
			<source ref="id68"/>
			<target ref="id67"/>
			<label kind="synchronisation" x="-119" y="25">rAct[id]?</label>
			<label kind="assignment" x="-187" y="8">aProcessed[id]:=0</label>
			<nail x="-102" y="0"/>
			<nail x="-68" y="0"/>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system Scheduler, T_actuation, T_positionEst, T_behaviorEst, Actuator, D_servoR, D_servoL, Sensor, D_gps;
    </system>
	<queries>
		<query>
			<formula>Pr [&lt;=12000] (&lt;&gt;  Actuator(0).EmergencyMode)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr [&lt;=12000] (&lt;&gt;  Actuator(0).IrreversibleFailure)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr [&lt;=12000] (&lt;&gt;  Actuator(0).PartialOperation)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Pr [&lt;=12000] (&lt;&gt;  D_servoR.PartialOperation)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Scheduler.Select --&gt; Scheduler.Free imply not(T_actuation.Error and T_behaviorEst.Error and T_positionEst.Error)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not (((T_actuation.MsgReceive or T_actuation.SignalTrans or T_actuation.EscRInterface or T_actuation.ESCLInterface or T_actuation.ServoRInterface or T_actuation.ServoLInterface or T_actuation.MsgSend) and T_actuation.ax &gt; D[0]) and ((T_behaviorEst.MsgReceive or T_behaviorEst.ImuInterface or T_behaviorEst.SonarInterface or T_behaviorEst.BehaviorEst or T_behaviorEst.MsgSend) and T_behaviorEst.ax &gt; D[1]) and ((T_positionEst.MsgReceive or T_positionEst.GpsInterface or T_positionEst.PositionEst or T_positionEst.MsgSend) and T_positionEst.ax &gt; D[2]) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not ((T_actuation.MsgReceive or T_actuation.SignalTrans or T_actuation.EscRInterface or T_actuation.ESCLInterface or T_actuation.ServoRInterface or T_actuation.ServoLInterface or T_actuation.MsgSend) and not (Scheduler.Run || Scheduler.NewRequest))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] ( not ( ( T_behaviorEst.MsgReceive or T_behaviorEst.ImuInterface or T_behaviorEst.SonarInterface or T_behaviorEst.BehaviorEst or T_behaviorEst.MsgSend ) and ( T_positionEst.MsgReceive or T_positionEst.GpsInterface or T_positionEst.PositionEst or T_positionEst.MsgSend ) ) and not ( ( T_behaviorEst.MsgReceive or T_behaviorEst.ImuInterface or T_behaviorEst.SonarInterface or T_behaviorEst.BehaviorEst or T_behaviorEst.MsgSend ) and ( T_actuation.MsgReceive or T_actuation.SignalTrans or T_actuation.EscRInterface or T_actuation.ESCLInterface or T_actuation.ServoRInterface or T_actuation.ServoLInterface or T_actuation.MsgSend ) ) and not ( ( T_actuation.MsgReceive or T_actuation.SignalTrans or T_actuation.EscRInterface or T_actuation.ESCLInterface or T_actuation.ServoRInterface or T_actuation.ServoLInterface or T_actuation.MsgSend ) and ( T_positionEst.MsgReceive or T_positionEst.GpsInterface or T_positionEst.PositionEst or T_positionEst.MsgSend ) ) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (not T_actuation.Error and not T_behaviorEst.Error) imply not deadlock
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (time == 27000 and T_actuation.ax == 3000 and T_behaviorEst.ax == 1000 and T_positionEst.ax == 10000 and !isError()) imply (T_actuation.Idle and T_behaviorEst.Idle and T_positionEst.Idle)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (time == 3000 and T_actuation.ax == 3000 and T_actuation.t &lt;= D[0] ) imply T_actuation.Idle
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (time == 4000 and T_actuation.ax == 3000 and T_behaviorEst.ax == 1000 ) imply (T_actuation.Idle and T_behaviorEst.Idle)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (T_actuation.ax &gt; D[0] imply (T_actuation.Idle or T_actuation.Ready or T_actuation.Error)) and (T_behaviorEst.ax &gt; D[1] imply (T_behaviorEst.Idle or T_behaviorEst.Ready or T_behaviorEst.Error)) and (T_positionEst.ax &gt; D[1] imply (T_positionEst.Idle or T_positionEst.Ready or T_positionEst.Error))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (T_actuation.Running imply T_actuation.ax &lt;= D[0]) and (T_behaviorEst.Running imply T_behaviorEst.ax &lt;= D[1]) and (T_positionEst.Running imply T_positionEst.ax &lt;= D[2])
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (not T_actuation.Error and not T_behaviorEst.Error and not T_positionEst.Error) imply not deadlock
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] deadlock imply (T_actuation.Error || T_behaviorEst.Error || T_positionEst.Error)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not ((T_actuation.Running and T_actuation.ax &gt; D[0]) and (T_behaviorEst.Running and T_behaviorEst.ax &gt; D[1]) and (T_positionEst.Running and T_positionEst.ax &gt; D[2]) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (T_actuation.Idle imply T_actuation.ax &lt;= D[0]) and (T_behaviorEst.Idle imply T_behaviorEst.ax &lt;= D[1]) and (T_positionEst.Idle imply T_positionEst.ax &lt;= D[2])
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not (T_positionEst.Running and not (Scheduler.Run || Scheduler.NewRequest))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not (T_behaviorEst.Running and not (Scheduler.Run || Scheduler.NewRequest))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not (not (T_actuation.Idle and T_actuation.Ready and T_actuation.Blocked and T_actuation.Error) and not (Scheduler.Run || Scheduler.NewRequest))
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not (T_actuation.Idle and T_actuation.Ready and T_actuation.Error) and not (T_positionEst.Idle and T_positionEst.Ready and T_positionEst.Error) and not (T_behaviorEst.Idle and T_behaviorEst.Ready and T_behaviorEst.Error)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; not (T_behaviorEst.Idle and T_behaviorEst.Ready and T_behaviorEst.Error) imply ((T_actuation.Blocked or T_actuation.Idle or T_actuation.Error) and (T_positionEst.Blocked or T_positionEst.Idle or T_positionEst.Error) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; not (T_positionEst.Idle and T_positionEst.Ready and T_positionEst.Error) imply ((T_actuation.Blocked or T_actuation.Idle or T_actuation.Error) and (T_behaviorEst.Blocked or T_behaviorEst.Idle or T_behaviorEst.Error) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; not (T_actuation.Idle and T_actuation.Ready and T_actuation.Error) imply ((T_positionEst.Blocked or T_positionEst.Idle or T_positionEst.Error) and (T_behaviorEst.Blocked or T_behaviorEst.Idle or T_behaviorEst.Error) )
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;Scheduler.NewRequest
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;Scheduler.Run
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;Scheduler.Select
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;Scheduler.Free
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_actuation.Error
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_positionEst.Error
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_behaviorEst.Error
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (T_behaviorEst.Error and T_positionEst.Error and T_actuation.Error)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_actuation.Idle
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_positionEst.Idle
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_behaviorEst.Idle
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (T_behaviorEst.Idle and T_positionEst.Idle and T_actuation.Idle)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (T_behaviorEst.Blocked and T_positionEst.Blocked and T_actuation.Blocked)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (T_behaviorEst.MsgReceive and T_positionEst.MsgReceive and T_actuation.MsgReceive)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (T_actuation.Idle and T_behaviorEst.Idle and T_positionEst.Idle)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_behaviorEst.Blocked
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_positionEst.Blocked
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_actuation.Blocked
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_actuation.MsgReceive
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_positionEst.MsgReceive
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; T_behaviorEst.MsgReceive
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
